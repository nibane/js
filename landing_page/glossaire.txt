element:active  https://developer.mozilla.org/fr/docs/Web/CSS/:active
src : https://developer.mozilla.org/fr/docs/Web/HTML/Element/img
placeholder : https://www.w3schools.com/jsref/prop_text_placeholder.asp

iste de input utile: https://developer.mozilla.org/fr/docs/Web/HTML/Element/input/button

Classe : une classe est un ensemble de code contenant des variables et des fonctions permettant de créer des objets. Une classe peut contenir plusieurs objets.

Objets : un objet est un bloc de code mêlant des variables et des fonctions, appelées respectivement attributs et méthodes. Les attributs définissent les caractéristiques d’un objet d’une classe, les méthodes définissent quant à elles les fonctions propres aux instances d’une classe.

Encapsulation : l'encapsulation permet d’enfermer dans une capsule les données brutes afin d’éviter des erreurs de manipulation ou de corruptions des données. L’encapsulation permet ainsi de cacher des méthodes et des attributs à l’extérieur de la classe.

Abstraction : le concept d’abstraction consiste à cacher les détails inutiles à l’utilisateur final d’une classe. Il va ainsi pouvoir utiliser une classe dans son code de programmation tout en ne sachant pas comment celle-ci a été développée.

Héritage : le concept d’héritage signifie qu’une classe B va hériter des mêmes attributs et méthodes qu’une classe A. Lorsqu’une instance de la classe B est créée, on peut alors appeler les méthodes présentes dans la classe A par la classe B. Cela va permettre de faire gagner du temps au programmeur.

Polymorphisme : lorsqu'une classe hérite des méthodes d’une classe parent, il est possible de surcharger une méthode, qui consiste à redéfinir la méthode de la classe parent pour que les deux classes ne fassent pas les mêmes tâches.

